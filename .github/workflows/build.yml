name: Java CI with Gradle

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'
        
    - name: Ensure execute permissions for gradlew
      run: chmod +x ./gradlew

    - name: Run tests
      run: ./gradlew test --no-daemon

  build:
    runs-on: ubuntu-latest

    needs: test

    # if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Ensure execute permissions for gradlew
        run: chmod +x ./gradlew

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build with SAM CLI
        run: sam build --debug

  deploy:
    runs-on: ubuntu-latest

    needs: build

    # if: github.ref == 'refs/heads/master' # Only deploy for the master branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy with SAM CLI
        # run: sam deploy --stack-name $AWS_STACK_NAME --region $AWS_REGION --capabilities CAPABILITY_NAMED_IAM
        run: sam deploy 
            --stack-name $AWS_STACK_NAME 
            --region $AWS_REGION 
            --capabilities CAPABILITY_NAMED_IAM 
            --resolve-s3 
            --s3-prefix $AWS_STACK_NAME 
            --confirm-changeset

